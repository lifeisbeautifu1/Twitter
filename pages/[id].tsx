import Head from "next/head";
import {
  collection,
  doc,
  onSnapshot,
  orderBy,
  query,
} from "@firebase/firestore";
import { useState, useEffect } from "react";
import { GetServerSideProps } from "next";
import { ArrowLeftIcon } from "@heroicons/react/solid";
import { useSession, getSession } from "next-auth/react";
import { useRouter } from "next/router";
import { useRecoilState } from "recoil";

import { Sidebar, Modal, Post, Comment, Widgets } from "../components";
import { modalState } from "../atoms/modalAtom";
import { db } from "../firebase";
import trendingResults from "../data/trendingResults.json";
import followResults from "../data/followResults.json";

export default function PostPage({
  trendingResults,
  followResults,
  providers,
}: any) {
  const { data: session } = useSession();

  const [comments, setComments] = useState<any>([]);

  const [post, setPost] = useState<any>(null);

  const router = useRouter();

  const [isOpen, setIsOpen] = useRecoilState(modalState);

  const { id } = router.query;

  useEffect(() => {
    if (!session) {
      router.push("/auth/signin");
    }
  }, [session]);

  useEffect(
    () =>
      onSnapshot(doc(db, "posts", id as string), (snapshot) => {
        setPost(snapshot.data());
      }),
    [db]
  );

  useEffect(
    () =>
      onSnapshot(
        query(
          collection(db, "posts", id as string, "comments"),
          orderBy("timestamp", "desc")
        ),
        (snapshot) => setComments(snapshot.docs)
      ),
    [db, id]
  );

  return (
    <>
      <Head>
        <title>
          {post?.username} on Twitter: {post?.text}
        </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-black min-h-screen flex max-w-[1500px] mx-auto">
        <Sidebar />
        <div className="flex-grow border-l border-r border-gray-700 max-w-2xl sm:ml-[73px] xl:ml-[370px]">
          <div className="flex items-center px-1.5 py-2 border-b border-gray-700 text-[#d9d9d9] font-semibold text-xl gap-x-4 sticky top-0 z-50 bg-black">
            <div
              className="hoverAnimation w-9 h-9 flex items-center justify-center xl:px-0"
              onClick={() => router.push("/")}
            >
              <ArrowLeftIcon className="h-5 text-white" />
            </div>
            Tweet
          </div>
          <Post id={id as string} post={post} postPage />
          {comments.length > 0 && (
            <div className="pb-72">
              {comments.map((comment: any) => (
                <Comment
                  key={comment.id}
                  id={comment.id}
                  comment={comment.data()}
                />
              ))}
            </div>
          )}
        </div>
        <Widgets
          trendingResults={trendingResults}
          followResults={followResults}
        />
        {isOpen && <Modal />}
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  // const trendingResults = await fetch("https://jsonkeeper.com/b/NKEV", {}).then(
  //   (res) => res.json()
  // );
  // const followResults = await fetch("https://jsonkeeper.com/b/WWMJ").then(
  //   (res) => res.json()
  // );

  const session = await getSession(context);
  return {
    props: {
      trendingResults,
      followResults,
      session,
    },
  };
};
